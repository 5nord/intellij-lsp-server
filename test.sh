#echo "^M"
#echo -e "Content-Length: 475\n\n{\"jsonrpc\":\"2.0\",\"method\":\"initialize\",\"params\":{\"processId\":5100,\"rootPath\":\"e:/build/intellij-plugins/Dart/\",\"rootUri\":\"file:///e:/build/intellij-plugins/Dart/\",\"capabilities\":{\"workspace\":{\"applyEdit\":true,\"executeCommand\":{\"dynamicRegistration\":true}},\"textDocument\":{\"synchronization\":{\"willSave\":true,\"didSave\":true},\"documentSymbol\":{\"symbolKind\":{\"valueSet\":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}}}},\"initializationOptions\":null},\"id\":1}" | nc 127.0.0.1 8080

echo -e "Content-Length: 1256\n\n{\"jsonrpc\":\"2.0\",\"method\":\"textDocument/didOpen\",\"params\":{\"textDocument\":{\"uri\":\"file:///e:/build/intellij-plugins/Dart/src/com/jetbrains/lang/dart/DartYamlFileTypeFactory.java\",\"languageId\":\"intellij\",\"version\":0,\"text\":\"package com.jetbrains.lang.dart;\\n\\nimport com.intellij.openapi.fileTypes.ExactFileNameMatcher;\\nimport com.intellij.openapi.fileTypes.FileType;\\nimport com.intellij.openapi.fileTypes.FileTypeConsumer;\\nimport com.intellij.openapi.fileTypes.FileTypeFactory;\\nimport org.jetbrains.annotations.NotNull;\\n\\npublic class DartYamlFileTypeFactory extends FileTypeFactory {\\n\\n  public static final String DOT_ANALYSIS_OPTIONS = \\\".analysis_options\\\";\\n\\n  @Override\\n  public void createFileTypes(@NotNull final FileTypeConsumer fileTypeConsumer) {\\n    // Do not use YAMLFileType.YML directly to avoid class loaders conflict in IDEA Community + Dart Plugin project setup.\\n    // The problem is that YAMLFileType is instantiated twice in such project setup: by PluginClassLoader and by UrlClassLoader\\n    final FileType yamlFileType = fileTypeConsumer.getStandardFileTypeByName(\\\"YAML\\\");\\n    if (yamlFileType != null) {\\n      fileTypeConsumer.consume(yamlFileType, new ExactFileNameMatcher(DOT_ANALYSIS_OPTIONS));\\n    }\\n  }\\n}\\n\"}}}" | nc 127.0.0.1 8080
